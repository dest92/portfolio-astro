<section class="max-w-5xl mx-auto px-4 sm:px-6 lg:px-8">
  <div class="relative group">
    <!-- Terminal Window -->
    <div class="bg-gradient-to-br from-black via-slate-900 to-black rounded-lg shadow-2xl border-2 border-cyan-400/30 hover:border-cyan-400/60 transition-all duration-300 overflow-hidden backdrop-blur-sm relative">
      
      <!-- Cyberpunk glow effects -->
      <div class="absolute inset-0 bg-gradient-to-br from-cyan-400/5 via-transparent to-purple-500/5 pointer-events-none"></div>
      <div class="absolute -inset-1 bg-gradient-to-r from-cyan-400/20 via-purple-500/20 to-cyan-400/20 blur-sm opacity-60 -z-10"></div>
      
      <!-- Terminal Header -->
      <div class="bg-gradient-to-r from-black via-slate-900 to-black px-4 py-3 border-b border-cyan-400/30 flex items-center justify-between relative overflow-hidden">
        <!-- Header background effects -->
        <div class="absolute inset-0 bg-gradient-to-r from-cyan-400/5 via-purple-500/5 to-cyan-400/5"></div>
        <div class="absolute top-0 left-0 w-full h-px bg-gradient-to-r from-transparent via-cyan-400/50 to-transparent"></div>
        
        <div class="flex items-center gap-2 relative z-10">
          <span class="w-3 h-3 bg-red-500 rounded-full hover:bg-red-400 transition-colors cursor-pointer shadow-lg shadow-red-500/50 hover:shadow-red-400/70"></span>
          <span class="w-3 h-3 bg-yellow-500 rounded-full hover:bg-yellow-400 transition-colors cursor-pointer shadow-lg shadow-yellow-500/50 hover:shadow-yellow-400/70"></span>
          <span class="w-3 h-3 bg-green-500 rounded-full hover:bg-green-400 transition-colors cursor-pointer shadow-lg shadow-green-500/50 hover:shadow-green-400/70"></span>
        </div>
        <div class="text-sm font-mono text-cyan-400 hidden sm:block relative z-10 font-bold tracking-wider">
          <span class="text-purple-400">matias</span>@<span class="text-cyan-400">portfolio</span>:<span class="text-green-400">~$</span>
        </div>
        <div class="w-16 relative z-10"></div> <!-- Spacer -->
      </div>
      
      <!-- Terminal Body -->
      <div class="p-4 sm:p-6 bg-gradient-to-b from-black/90 to-slate-900/90 relative">
        <!-- Grid pattern overlay -->
        <div class="absolute inset-0 opacity-5">
          <div class="w-full h-full bg-[linear-gradient(rgba(0,255,255,0.1)_1px,transparent_1px),linear-gradient(90deg,rgba(0,255,255,0.1)_1px,transparent_1px)] bg-[size:20px_20px]"></div>
        </div>
        
        <div class="font-mono text-sm sm:text-base relative z-10">
          <!-- Content Area -->
          <div class="max-h-80 sm:max-h-96 overflow-y-auto scrollbar-thin scrollbar-thumb-cyan-400/50 scrollbar-track-transparent" id="terminal-content">
            <div class="space-y-1">
              <div class="flex flex-wrap">
                <span class="text-cyan-400 font-bold text-shadow-glow">guest@matias-portfolio:~$ </span>
                <span class="text-white ml-1 font-medium">help</span>
              </div>
              <div class="text-gray-400">
                Comandos disponibles:
              </div>
              <div class="ml-2 space-y-1 text-gray-400">
                <div><span class="text-cyan-400 font-bold text-shadow-glow">whoami</span> - Información personal</div>
                <div><span class="text-cyan-400 font-bold text-shadow-glow">skills</span> - Habilidades técnicas</div>
                <div><span class="text-cyan-400 font-bold text-shadow-glow">experience</span> - Experiencia laboral</div>
                <div><span class="text-cyan-400 font-bold text-shadow-glow">projects</span> - Proyectos destacados</div>
                <div><span class="text-cyan-400 font-bold text-shadow-glow">contact</span> - Información de contacto</div>
                <div><span class="text-cyan-400 font-bold text-shadow-glow">clear</span> - Limpiar terminal</div>
                <div><span class="text-cyan-400 font-bold text-shadow-glow">matrix</span> - ¿Te atreves? 😎</div>
              </div>
            </div>
          </div>
          
          <!-- Input Line -->
          <div class="flex items-center mt-4 pt-4 border-t border-cyan-400/30 relative">
            <!-- Glowing line effect -->
            <div class="absolute top-0 left-0 w-full h-px bg-gradient-to-r from-transparent via-cyan-400/70 to-transparent"></div>
            
            <span class="text-cyan-400 font-bold whitespace-nowrap text-shadow-glow">guest@matias-portfolio:~$ </span>
            <div class="flex-1 relative ml-2">
              <input 
                type="text" 
                class="w-full bg-transparent border-none outline-none text-white font-mono text-sm sm:text-base placeholder-gray-500 pr-4" 
                id="terminal-input"
                placeholder="Escribe un comando (ej: whoami)"
                autocomplete="off"
                spellcheck="false"
              />
              <span class="absolute top-0 text-cyan-400 font-bold animate-pulse pointer-events-none text-shadow-glow" id="cursor" style="left: 0;">|</span>
            </div>
          </div>
        </div>
      </div>
    </div>
    
    <!-- Floating help hint with cyberpunk styling -->
    <div class="absolute -bottom-8 left-4 text-xs text-cyan-400 opacity-70 font-mono">
      <span class="text-purple-400">💡</span> <span class="text-cyan-400">Tip:</span> Prueba con <span class="text-green-400">"whoami"</span> o <span class="text-green-400">"skills"</span>
    </div>
  </div>
</section>

<style>
  /* Cyberpunk text shadow effects */
  .text-shadow-glow {
    text-shadow: 0 0 10px currentColor, 0 0 20px currentColor, 0 0 30px currentColor;
  }
  
  /* Custom scrollbar with cyberpunk styling */
  .scrollbar-thin {
    scrollbar-width: thin;
    scrollbar-color: rgba(34, 197, 94, 0.7) transparent;
  }
  
  .scrollbar-thumb-cyan-400\/50::-webkit-scrollbar {
    width: 8px;
  }
  
  .scrollbar-thumb-cyan-400\/50::-webkit-scrollbar-track {
    background: rgba(0, 0, 0, 0.3);
    border-radius: 10px;
  }
  
  .scrollbar-thumb-cyan-400\/50::-webkit-scrollbar-thumb {
    background: linear-gradient(180deg, rgba(6, 182, 212, 0.8), rgba(168, 85, 247, 0.8));
    border-radius: 10px;
    border: 1px solid rgba(6, 182, 212, 0.3);
  }
  
  .scrollbar-thumb-cyan-400\/50::-webkit-scrollbar-thumb:hover {
    background: linear-gradient(180deg, rgba(6, 182, 212, 1), rgba(168, 85, 247, 1));
    box-shadow: 0 0 10px rgba(6, 182, 212, 0.5);
  }
  
  /* Matrix rain effect */
  .matrix-char {
    position: fixed;
    color: #00ff00;
    font-family: 'Courier New', monospace;
    font-weight: bold;
    text-shadow: 0 0 5px #00ff00, 0 0 10px #00ff00, 0 0 15px #00ff00;
    z-index: 9999;
    pointer-events: none;
    animation: matrix-fall 2s linear forwards;
  }
  
  @keyframes matrix-fall {
    0% {
      transform: translateY(-100vh) rotate(0deg);
      opacity: 1;
    }
    100% {
      transform: translateY(100vh) rotate(360deg);
      opacity: 0;
    }
  }
  
  /* Glitch effect for terminal */
  .group:hover .bg-gradient-to-br {
    animation: glitch 0.3s ease-in-out;
  }
  
  @keyframes glitch {
    0%, 100% { transform: translate(0); }
    20% { transform: translate(-1px, 1px); }
    40% { transform: translate(-1px, -1px); }
    60% { transform: translate(1px, 1px); }
    80% { transform: translate(1px, -1px); }
  }
  
  /* Neon border pulse effect */
  .border-cyan-400\/30 {
    position: relative;
  }
  
  .border-cyan-400\/30::before {
    content: '';
    position: absolute;
    inset: -2px;
    background: linear-gradient(45deg, transparent, rgba(6, 182, 212, 0.3), transparent);
    border-radius: inherit;
    z-index: -1;
    animation: border-pulse 2s ease-in-out infinite;
  }
  
  @keyframes border-pulse {
    0%, 100% { opacity: 0.3; }
    50% { opacity: 0.8; }
  }
  
  /* Cyberpunk input styling */
  #terminal-input {
    background: linear-gradient(90deg, transparent, rgba(6, 182, 212, 0.05), transparent);
    transition: all 0.3s ease;
  }
  
  #terminal-input:focus {
    background: linear-gradient(90deg, transparent, rgba(6, 182, 212, 0.1), transparent);
    box-shadow: 0 0 20px rgba(6, 182, 212, 0.2);
  }
  
  /* Scanning line effect */
  .bg-gradient-to-b::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 2px;
    background: linear-gradient(90deg, transparent, rgba(6, 182, 212, 0.8), transparent);
    animation: scan-line 3s ease-in-out infinite;
  }
  
  @keyframes scan-line {
    0% { transform: translateY(0); opacity: 1; }
    50% { transform: translateY(400px); opacity: 0.5; }
    100% { transform: translateY(0); opacity: 1; }
  }
</style>

<script>
  interface TerminalCommands {
    [key: string]: () => Array<{ text: string; class: string }> | string;
  }

  interface Terminal {
    content: HTMLElement | null;
    input: HTMLInputElement | null;
    cursor: HTMLElement | null;
    history: string[];
    historyIndex: number;
    commands: TerminalCommands;
    addLine: (content: any, isInput?: boolean) => void;
    executeCommand: (cmd: string) => void;
    updateCursorPosition: () => void;
    init: () => void;
  }

  const terminal: Terminal = {
    content: document.getElementById('terminal-content'),
    input: document.getElementById('terminal-input') as HTMLInputElement | null,
    cursor: document.getElementById('cursor'),
    history: [],
    historyIndex: 0,
    
    commands: {
      whoami: () => [
        { text: "════════════════════════════════════════", class: "text-cyan-400 text-shadow-glow" },
        { text: "│           MATÍAS ACEBAL                │", class: "text-green-400 font-bold text-shadow-glow" },
        { text: "════════════════════════════════════════", class: "text-cyan-400 text-shadow-glow" },
        { text: "Rol: Desarrollador FullStack & Analista en Sistemas", class: "text-white" },
        { text: "Edad: 22 años", class: "text-white" },
        { text: "Ubicación: Argentina 🇦🇷", class: "text-white" },
        { text: "Estado: Finalizando Ingeniería en Sistemas", class: "text-white" },
        { text: "Especialidad: Desarrollo Web & Ciberseguridad", class: "text-yellow-400 text-shadow-glow" },
        { text: "Años programando: 5+ años", class: "text-white" },
        { text: "Proyecto destacado: FitLife Manager (600+ usuarios)", class: "text-green-400 text-shadow-glow" },
      ],
      
      skills: () => [
        { text: "╔═══════════════════════════════════════╗", class: "text-cyan-400 text-shadow-glow" },
        { text: "║            HABILIDADES TÉCNICAS       ║", class: "text-cyan-400 text-shadow-glow" },
        { text: "╚═══════════════════════════════════════╝", class: "text-cyan-400 text-shadow-glow" },
        { text: "Frontend: React, Vue.js, HTML5, CSS3, JavaScript, TypeScript", class: "text-green-400 text-shadow-glow" },
        { text: "Backend: Node.js, Python, PHP, Java", class: "text-green-400 text-shadow-glow" },
        { text: "Bases de datos: MySQL, PostgreSQL, MongoDB", class: "text-green-400 text-shadow-glow" },
        { text: "DevOps: Docker, Git, Linux, AWS", class: "text-yellow-400 text-shadow-glow" },
        { text: "Ciberseguridad: Auditorías web, Pentesting, OWASP", class: "text-red-400 text-shadow-glow" },
        { text: "Otras: Astro, Tailwind CSS, Express.js", class: "text-white" },
      ],
      
      experience: () => [
        { text: "🚀 EXPERIENCIA PROFESIONAL", class: "text-cyan-400 text-shadow-glow" },
        { text: "────────────────────────────────────", class: "text-cyan-400 text-shadow-glow" },
        { text: "💼 Desarrollador FullStack Freelance (2021-presente)", class: "text-green-400 text-shadow-glow" },
        { text: "   • Liderazgo de FitLife Manager", class: "text-white" },
        { text: "   • 600+ usuarios activos", class: "text-white" },
        { text: "   • Arquitectura escalable", class: "text-white" },
        { text: "", class: "text-white" },
        { text: "🔒 Especialista en Ciberseguridad (2022-presente)", class: "text-yellow-400 text-shadow-glow" },
        { text: "   • Auditorías de seguridad web", class: "text-white" },
        { text: "   • Pruebas de penetración", class: "text-white" },
        { text: "   • Consultoría en OWASP", class: "text-white" },
      ],
      
      projects: () => [
        { text: "🎯 PROYECTOS DESTACADOS", class: "text-cyan-400 text-shadow-glow" },
        { text: "═══════════════════════════════════", class: "text-cyan-400 text-shadow-glow" },
        { text: "🏋️ FitLife Manager", class: "text-green-400 text-shadow-glow" },
        { text: "   └─ Sistema completo para gimnasios", class: "text-white" },
        { text: "   └─ 600+ usuarios activos", class: "text-white" },
        { text: "   └─ Tech: React, Node.js, MySQL", class: "text-white" },
        { text: "", class: "text-white" },
        { text: "🔐 Security Audit Tools", class: "text-yellow-400 text-shadow-glow" },
        { text: "   └─ Herramientas de auditoría web", class: "text-white" },
        { text: "   └─ Automatización de pentesting", class: "text-white" },
        { text: "   └─ Tech: Python, Bash, Linux", class: "text-white" },
        { text: "", class: "text-white" },
        { text: "🌐 Portfolio Cyberpunk", class: "text-red-400 text-shadow-glow" },
        { text: "   └─ Este mismo sitio web", class: "text-white" },
        { text: "   └─ Terminal interactiva", class: "text-white" },
        { text: "   └─ Tech: Astro, TypeScript, CSS", class: "text-white" },
      ],
      
      contact: () => [
        { text: "📞 INFORMACIÓN DE CONTACTO", class: "text-cyan-400 text-shadow-glow" },
        { text: "══════════════════════════════════", class: "text-cyan-400 text-shadow-glow" },
        { text: "📧 Email: acebalmatias2019@gmail.com", class: "text-green-400 text-shadow-glow" },
        { text: "💼 LinkedIn: linkedin.com/in/matiasacebal", class: "text-green-400 text-shadow-glow" },
        { text: "🐱 GitHub: github.com/dest92", class: "text-green-400 text-shadow-glow" },
        { text: "📄 CV: [Enlace disponible en el sitio]", class: "text-yellow-400 text-shadow-glow" },
        { text: "", class: "text-white" },
        { text: "💡 ¿Tienes un proyecto interesante?", class: "text-cyan-400 text-shadow-glow" },
        { text: "¡Contáctame y hablemos! 🚀", class: "text-green-400 text-shadow-glow" },
      ],
      
      clear: () => 'CLEAR',
      
      matrix: () => {
        // Create matrix effect
        const chars = '01アイウエオカキクケコサシスセソタチツテトナニヌネノハヒフヘホマミムメモヤユヨラリルレロワヲン';
        for (let i = 0; i < 50; i++) {
          setTimeout(() => {
            const char = document.createElement('div');
            char.textContent = chars[Math.floor(Math.random() * chars.length)];
            char.className = 'matrix-char';
            char.style.left = Math.random() * window.innerWidth + 'px';
            char.style.fontSize = (Math.random() * 20 + 10) + 'px';
            char.style.animationDelay = Math.random() * 2 + 's';
            document.body.appendChild(char);
            
            setTimeout(() => char.remove(), 2000);
          }, i * 30);
        }
        
        return [
          { text: "Iniciando secuencia Matrix...", class: "text-green-400 text-shadow-glow" },
          { text: "Wake up, Neo... 🕶️", class: "text-red-400 text-shadow-glow" },
          { text: "The Matrix has you...", class: "text-yellow-400 text-shadow-glow" },
          { text: "Follow the white rabbit 🐰", class: "text-cyan-400 text-shadow-glow" },
        ];
      },
      
      help: () => [
        { text: "Comandos disponibles:", class: "text-cyan-400 text-shadow-glow" },
        { text: "  whoami     - Información personal", class: "text-white" },
        { text: "  skills     - Habilidades técnicas", class: "text-white" },
        { text: "  experience - Experiencia laboral", class: "text-white" },
        { text: "  projects   - Proyectos destacados", class: "text-white" },
        { text: "  contact    - Información de contacto", class: "text-white" },
        { text: "  clear      - Limpiar terminal", class: "text-white" },
        { text: "  matrix     - ¿Te atreves? 😎", class: "text-white" },
      ]
    },
    
    addLine(content: any, isInput = false) {
      if (!this.content) return;
      
      const line = document.createElement('div');
      line.className = 'mb-1';
      
      if (isInput) {
        line.innerHTML = `<span class="text-cyan-400 font-bold text-shadow-glow">guest@matias-portfolio:~$ </span><span class="text-white">${content}</span>`;
      } else if (typeof content === 'string') {
        line.innerHTML = `<span class="text-gray-400">${content}</span>`;
      } else {
        line.innerHTML = `<span class="${content.class || 'text-gray-400'}">${content.text}</span>`;
      }
      
      this.content.appendChild(line);
      this.content.scrollTop = this.content.scrollHeight;
    },
    
    executeCommand(cmd: string) {
      const command = cmd.toLowerCase().trim();
      this.addLine(cmd, true);
      
      if (command === '') return;
      
      if (this.commands[command]) {
        const result = this.commands[command]();
        
        if (result === 'CLEAR') {
          if (this.content) {
            this.content.innerHTML = '';
          }
          return;
        }
        
        if (Array.isArray(result)) {
          result.forEach((line, index) => {
            setTimeout(() => this.addLine(line), index * 50);
          });
        } else {
          this.addLine(result);
        }
      } else {
        this.addLine({ text: `bash: ${command}: command not found`, class: "text-red-400 text-shadow-glow" });
        this.addLine({ text: "Escribe 'help' para ver los comandos disponibles", class: "text-yellow-400 text-shadow-glow" });
      }
      
      this.history.push(cmd);
      this.historyIndex = this.history.length;
    },
    
    updateCursorPosition() {
      if (!this.input || !this.cursor) return;
      
      // Hide cursor when input is empty (to not interfere with placeholder)
      if (this.input.value === '') {
        this.cursor.style.display = 'none';
        return;
      }
      
      // Show cursor when there's text
      this.cursor.style.display = 'block';
      
      // Create a temporary span to measure text width
      const tempSpan = document.createElement('span');
      tempSpan.style.visibility = 'hidden';
      tempSpan.style.position = 'absolute';
      tempSpan.style.fontFamily = 'monospace';
      tempSpan.style.fontSize = getComputedStyle(this.input).fontSize;
      tempSpan.textContent = this.input.value;
      document.body.appendChild(tempSpan);
      
      const textWidth = tempSpan.offsetWidth;
      document.body.removeChild(tempSpan);
      
      this.cursor.style.left = textWidth + 'px';
    },
    
    init() {
      if (!this.input) return;
      
      this.input.addEventListener('input', () => {
        this.updateCursorPosition();
      });
      
      this.input.addEventListener('focus', () => {
        // Show cursor when input gets focus
        if (this.cursor) {
          this.cursor.style.display = 'block';
        }
      });
      
      this.input.addEventListener('blur', () => {
        // Hide cursor when input loses focus if it's empty
        if (this.cursor && this.input && this.input.value === '') {
          this.cursor.style.display = 'none';
        }
      });
      
      this.input.addEventListener('keydown', (e) => {
        if (!this.input) return;
        
        if (e.key === 'Enter') {
          this.executeCommand(this.input.value);
          this.input.value = '';
          this.updateCursorPosition();
        } else if (e.key === 'ArrowUp') {
          e.preventDefault();
          if (this.historyIndex > 0) {
            this.historyIndex--;
            this.input.value = this.history[this.historyIndex] || '';
            this.updateCursorPosition();
          }
        } else if (e.key === 'ArrowDown') {
          e.preventDefault();
          if (this.historyIndex < this.history.length) {
            this.historyIndex++;
            this.input.value = this.history[this.historyIndex] || '';
            this.updateCursorPosition();
          }
        }
      });
      
      // Auto focus on terminal click
      document.addEventListener('click', (e) => {
        if (e.target && (e.target as HTMLElement).closest('.bg-gradient-to-br')) {
          if (this.input) {
            this.input.focus();
          }
        }
      });
      
      // Initialize cursor position
      this.updateCursorPosition();
    }
  };
  
  // Initialize terminal when DOM is loaded
  document.addEventListener('DOMContentLoaded', () => {
    terminal.init();
  });
</script>