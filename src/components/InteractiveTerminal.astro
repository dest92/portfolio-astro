<section class="max-w-5xl mx-auto px-4 sm:px-6 lg:px-8">
  <div class="relative group">
    <!-- Terminal Window -->
    <div class="bg-gradient-to-b from-slate-900 to-slate-800 rounded-lg shadow-2xl border border-white/10 hover:border-green-400/30 transition-all duration-300 overflow-hidden backdrop-blur-sm">
      
      <!-- Terminal Header -->
      <div class="bg-gradient-to-r from-slate-800 to-slate-700 px-4 py-3 border-b border-white/10 flex items-center justify-between">
        <div class="flex items-center gap-2">
          <span class="w-3 h-3 bg-red-500 rounded-full hover:bg-red-400 transition-colors cursor-pointer"></span>
          <span class="w-3 h-3 bg-yellow-500 rounded-full hover:bg-yellow-400 transition-colors cursor-pointer"></span>
          <span class="w-3 h-3 bg-green-500 rounded-full hover:bg-green-400 transition-colors cursor-pointer"></span>
        </div>
        <div class="text-sm font-mono text-gray-300 hidden sm:block">
          matias@portfolio:~$
        </div>
        <div class="w-16"></div> <!-- Spacer -->
      </div>
      
      <!-- Terminal Body -->
      <div class="p-4 sm:p-6 bg-black/50">
        <div class="font-mono text-sm sm:text-base">
          <!-- Content Area -->
          <div class="max-h-80 sm:max-h-96 overflow-y-auto scrollbar-thin scrollbar-thumb-green-400/50 scrollbar-track-transparent" id="terminal-content">
            <div class="space-y-1">
              <div class="flex flex-wrap">
                <span class="text-green-400 font-bold">guest@matias-portfolio:~$ </span>
                <span class="text-white ml-1">help</span>
              </div>
              <div class="text-gray-400">
                Comandos disponibles:
              </div>
              <div class="ml-2 space-y-1 text-gray-400">
                <div><span class="text-cyan-400 font-bold">whoami</span> - Información personal</div>
                <div><span class="text-cyan-400 font-bold">skills</span> - Habilidades técnicas</div>
                <div><span class="text-cyan-400 font-bold">experience</span> - Experiencia laboral</div>
                <div><span class="text-cyan-400 font-bold">projects</span> - Proyectos destacados</div>
                <div><span class="text-cyan-400 font-bold">contact</span> - Información de contacto</div>
                <div><span class="text-cyan-400 font-bold">clear</span> - Limpiar terminal</div>
                <div><span class="text-cyan-400 font-bold">matrix</span> - ¿Te atreves? 😎</div>
              </div>
            </div>
          </div>
          
          <!-- Input Line -->
          <div class="flex items-center mt-4 pt-4 border-t border-white/10">
            <span class="text-green-400 font-bold whitespace-nowrap">guest@matias-portfolio:~$ </span>
            <div class="flex-1 relative ml-2">
              <input 
                type="text" 
                class="w-full bg-transparent border-none outline-none text-white font-mono text-sm sm:text-base placeholder-gray-500 caret-green-400" 
                id="terminal-input"
                placeholder="Escribe un comando (ej: whoami)"
                autocomplete="off"
                spellcheck="false"
              />
              <span class="absolute top-0 left-0 text-green-400 font-bold animate-pulse pointer-events-none opacity-75" id="cursor">|</span>
            </div>
          </div>
        </div>
      </div>
    </div>
    
    <!-- Floating help hint -->
    <div class="absolute -bottom-8 left-4 text-xs text-gray-400 opacity-70">
      💡 Tip: Prueba con "whoami" o "skills"
    </div>
  </div>
</section>

<style>
  /* Custom scrollbar */
  .scrollbar-thin {
    scrollbar-width: thin;
  }
  
  .scrollbar-thumb-green-400\/50::-webkit-scrollbar {
    width: 6px;
  }
  
  .scrollbar-thumb-green-400\/50::-webkit-scrollbar-track {
    background: transparent;
  }
  
  .scrollbar-thumb-green-400\/50::-webkit-scrollbar-thumb {
    background-color: rgba(34, 197, 94, 0.5);
    border-radius: 3px;
  }
  
  .scrollbar-thumb-green-400\/50::-webkit-scrollbar-thumb:hover {
    background-color: rgba(34, 197, 94, 0.7);
  }
  
  .matrix-char {
    position: fixed;
    color: #00ff00;
    font-family: 'Courier New', monospace;
    font-weight: bold;
    text-shadow: 0 0 5px #00ff00;
    z-index: 9999;
    pointer-events: none;
  }
</style>

<script>
  interface TerminalCommands {
    [key: string]: () => Array<{ text: string; class: string }> | string;
  }

  interface Terminal {
    content: HTMLElement | null;
    input: HTMLInputElement | null;
    cursor: HTMLElement | null;
    history: string[];
    historyIndex: number;
    commands: TerminalCommands;
    addLine: (content: any, isInput?: boolean) => void;
    executeCommand: (cmd: string) => void;
    updateCursorPosition: () => void;
    init: () => void;
  }

  const terminal: Terminal = {
    content: document.getElementById('terminal-content'),
    input: document.getElementById('terminal-input') as HTMLInputElement | null,
    cursor: document.getElementById('cursor'),
    history: [],
    historyIndex: 0,
    
    commands: {
      whoami: () => [
        { text: "════════════════════════════════════════", class: "text-cyan-400" },
        { text: "│           MATÍAS ACEBAL                │", class: "text-green-400 font-bold" },
        { text: "════════════════════════════════════════", class: "text-cyan-400" },
        { text: "Rol: Desarrollador FullStack & Analista en Sistemas", class: "text-white" },
        { text: "Edad: 22 años", class: "text-white" },
        { text: "Ubicación: Argentina 🇦🇷", class: "text-white" },
        { text: "Estado: Finalizando Ingeniería en Sistemas", class: "text-white" },
        { text: "Especialidad: Desarrollo Web & Ciberseguridad", class: "text-yellow-400" },
        { text: "Años programando: 5+ años", class: "text-white" },
        { text: "Proyecto destacado: FitLife Manager (600+ usuarios)", class: "text-green-400" },
      ],
      
      skills: () => [
        { text: "╔═══════════════════════════════════════╗", class: "text-cyan-400" },
        { text: "║            HABILIDADES TÉCNICAS       ║", class: "text-cyan-400" },
        { text: "╚═══════════════════════════════════════╝", class: "text-cyan-400" },
        { text: "Frontend: React, Vue.js, HTML5, CSS3, JavaScript, TypeScript", class: "text-green-400" },
        { text: "Backend: Node.js, Python, PHP, Java", class: "text-green-400" },
        { text: "Bases de datos: MySQL, PostgreSQL, MongoDB", class: "text-green-400" },
        { text: "DevOps: Docker, Git, Linux, AWS", class: "text-yellow-400" },
        { text: "Ciberseguridad: Auditorías web, Pentesting, OWASP", class: "text-red-400" },
        { text: "Otras: Astro, Tailwind CSS, Express.js", class: "text-white" },
      ],
      
      experience: () => [
        { text: "🚀 EXPERIENCIA PROFESIONAL", class: "text-cyan-400" },
        { text: "────────────────────────────────────", class: "text-cyan-400" },
        { text: "💼 Desarrollador FullStack Freelance (2021-presente)", class: "text-green-400" },
        { text: "   • Liderazgo de FitLife Manager", class: "text-white" },
        { text: "   • 600+ usuarios activos", class: "text-white" },
        { text: "   • Arquitectura escalable", class: "text-white" },
        { text: "", class: "text-white" },
        { text: "🔒 Especialista en Ciberseguridad (2022-presente)", class: "text-yellow-400" },
        { text: "   • Auditorías de seguridad web", class: "text-white" },
        { text: "   • Pruebas de penetración", class: "text-white" },
        { text: "   • Consultoría en OWASP", class: "text-white" },
      ],
      
      projects: () => [
        { text: "🎯 PROYECTOS DESTACADOS", class: "text-cyan-400" },
        { text: "═══════════════════════════════════", class: "text-cyan-400" },
        { text: "🏋️ FitLife Manager", class: "text-green-400" },
        { text: "   └─ Sistema completo para gimnasios", class: "text-white" },
        { text: "   └─ 600+ usuarios activos", class: "text-white" },
        { text: "   └─ Tech: React, Node.js, MySQL", class: "text-white" },
        { text: "", class: "text-white" },
        { text: "🔐 Security Audit Tools", class: "text-yellow-400" },
        { text: "   └─ Herramientas de auditoría web", class: "text-white" },
        { text: "   └─ Automatización de pentesting", class: "text-white" },
        { text: "   └─ Tech: Python, Bash, Linux", class: "text-white" },
        { text: "", class: "text-white" },
        { text: "🌐 Portfolio Cyberpunk", class: "text-red-400" },
        { text: "   └─ Este mismo sitio web", class: "text-white" },
        { text: "   └─ Terminal interactiva", class: "text-white" },
        { text: "   └─ Tech: Astro, TypeScript, CSS", class: "text-white" },
      ],
      
      contact: () => [
        { text: "📞 INFORMACIÓN DE CONTACTO", class: "text-cyan-400" },
        { text: "══════════════════════════════════", class: "text-cyan-400" },
        { text: "📧 Email: acebalmatias2019@gmail.com", class: "text-green-400" },
        { text: "💼 LinkedIn: linkedin.com/in/matiasacebal", class: "text-green-400" },
        { text: "🐱 GitHub: github.com/dest92", class: "text-green-400" },
        { text: "📄 CV: [Enlace disponible en el sitio]", class: "text-yellow-400" },
        { text: "", class: "text-white" },
        { text: "💡 ¿Tienes un proyecto interesante?", class: "text-cyan-400" },
        { text: "¡Contáctame y hablemos! 🚀", class: "text-green-400" },
      ],
      
      clear: () => 'CLEAR',
      
      matrix: () => {
        // Create matrix effect
        const chars = '01アイウエオカキクケコサシスセソタチツテトナニヌネノハヒフヘホマミムメモヤユヨラリルレロワヲン';
        for (let i = 0; i < 30; i++) {
          setTimeout(() => {
            const char = document.createElement('div');
            char.textContent = chars[Math.floor(Math.random() * chars.length)];
            char.className = 'matrix-char';
            char.style.left = Math.random() * window.innerWidth + 'px';
            char.style.fontSize = (Math.random() * 20 + 10) + 'px';
            char.style.animationDelay = Math.random() * 2 + 's';
            document.body.appendChild(char);
            
            setTimeout(() => char.remove(), 2000);
          }, i * 50);
        }
        
        return [
          { text: "Iniciando secuencia Matrix...", class: "text-green-400" },
          { text: "Wake up, Neo... 🕶️", class: "text-red-400" },
          { text: "The Matrix has you...", class: "text-yellow-400" },
          { text: "Follow the white rabbit 🐰", class: "text-cyan-400" },
        ];
      },
      
      help: () => [
        { text: "Comandos disponibles:", class: "text-cyan-400" },
        { text: "  whoami     - Información personal", class: "text-white" },
        { text: "  skills     - Habilidades técnicas", class: "text-white" },
        { text: "  experience - Experiencia laboral", class: "text-white" },
        { text: "  projects   - Proyectos destacados", class: "text-white" },
        { text: "  contact    - Información de contacto", class: "text-white" },
        { text: "  clear      - Limpiar terminal", class: "text-white" },
        { text: "  matrix     - ¿Te atreves? 😎", class: "text-white" },
      ]
    },
    
    addLine(content: any, isInput = false) {
      if (!this.content) return;
      
      const line = document.createElement('div');
      line.className = 'mb-1';
      
      if (isInput) {
        line.innerHTML = `<span class="text-green-400 font-bold">guest@matias-portfolio:~$ </span><span class="text-white">${content}</span>`;
      } else if (typeof content === 'string') {
        line.innerHTML = `<span class="text-gray-400">${content}</span>`;
      } else {
        line.innerHTML = `<span class="${content.class || 'text-gray-400'}">${content.text}</span>`;
      }
      
      this.content.appendChild(line);
      this.content.scrollTop = this.content.scrollHeight;
    },
    
    executeCommand(cmd: string) {
      const command = cmd.toLowerCase().trim();
      this.addLine(cmd, true);
      
      if (command === '') return;
      
      if (this.commands[command]) {
        const result = this.commands[command]();
        
        if (result === 'CLEAR') {
          if (this.content) {
            this.content.innerHTML = '';
          }
          return;
        }
        
        if (Array.isArray(result)) {
          result.forEach((line, index) => {
            setTimeout(() => this.addLine(line), index * 30);
          });
        } else {
          this.addLine(result);
        }
      } else {
        this.addLine({ text: `bash: ${command}: command not found`, class: "text-red-400" });
        this.addLine({ text: "Escribe 'help' para ver los comandos disponibles", class: "text-yellow-400" });
      }
      
      this.history.push(cmd);
      this.historyIndex = this.history.length;
    },
    
    updateCursorPosition() {
      // Cursor is now handled by CSS animation
    },
    
    init() {
      if (!this.input) return;
      
      this.input.addEventListener('keydown', (e) => {
        if (!this.input) return;
        
        if (e.key === 'Enter') {
          this.executeCommand(this.input.value);
          this.input.value = '';
        } else if (e.key === 'ArrowUp') {
          e.preventDefault();
          if (this.historyIndex > 0) {
            this.historyIndex--;
            this.input.value = this.history[this.historyIndex] || '';
          }
        } else if (e.key === 'ArrowDown') {
          e.preventDefault();
          if (this.historyIndex < this.history.length) {
            this.historyIndex++;
            this.input.value = this.history[this.historyIndex] || '';
          }
        }
      });
      
      // Auto focus on terminal click
      document.addEventListener('click', (e) => {
        if (e.target && (e.target as HTMLElement).closest('.bg-gradient-to-b')) {
          if (this.input) {
            this.input.focus();
          }
        }
      });
    }
  };
  
  // Initialize terminal when DOM is loaded
  document.addEventListener('DOMContentLoaded', () => {
    terminal.init();
  });
</script>