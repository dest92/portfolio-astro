---

---

<button id="themeToggle" class="cyber-theme-toggle">
  <div class="toggle-container">
    <div class="toggle-track">
      <div class="toggle-thumb">
        <svg class="toggle-icon sun-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <circle cx="12" cy="12" r="5"/>
          <path d="M12 1v2M12 21v2M4.22 4.22l1.42 1.42M18.36 18.36l1.42 1.42M1 12h2M21 12h2M4.22 19.78l1.42-1.42M18.36 5.64l1.42-1.42"/>
        </svg>
        <svg class="toggle-icon moon-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"/>
        </svg>
      </div>
    </div>
    <div class="toggle-glow"></div>
  </div>
</button>

<style>
  .cyber-theme-toggle {
    border: none;
    background: none;
    cursor: pointer;
    padding: 0.5rem;
    border-radius: 12px;
    transition: all 0.3s ease;
    position: relative;
    z-index: 10;
  }

  .cyber-theme-toggle:hover {
    transform: scale(1.05);
  }

  .toggle-container {
    position: relative;
    width: 3rem;
    height: 1.5rem;
  }

  .toggle-track {
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, 
      rgba(0, 255, 136, 0.2) 0%, 
      rgba(0, 200, 255, 0.2) 100%
    );
    border: 1px solid rgba(0, 255, 136, 0.4);
    border-radius: 12px;
    position: relative;
    overflow: hidden;
    transition: all 0.3s ease;
  }

  .toggle-track::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(90deg, 
      transparent 0%, 
      rgba(0, 255, 136, 0.3) 50%, 
      transparent 100%
    );
    transform: translateX(-100%);
    animation: track-shimmer 2s ease-in-out infinite;
  }

  .toggle-thumb {
    position: absolute;
    top: 50%;
    left: 2px;
    transform: translateY(-50%);
    width: 1.25rem;
    height: 1.25rem;
    background: linear-gradient(135deg, #00ff88 0%, #00cc6a 100%);
    border-radius: 50%;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 
      0 2px 8px rgba(0, 0, 0, 0.2),
      0 0 20px rgba(0, 255, 136, 0.4);
  }

  .toggle-icon {
    width: 0.75rem;
    height: 0.75rem;
    color: #000;
    transition: all 0.3s ease;
  }

  .sun-icon {
    opacity: 1;
    transform: scale(1);
  }

  .moon-icon {
    position: absolute;
    opacity: 0;
    transform: scale(0.8);
  }

  .toggle-glow {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 4rem;
    height: 2.5rem;
    background: radial-gradient(circle, rgba(0, 255, 136, 0.2) 0%, transparent 70%);
    border-radius: 50%;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .cyber-theme-toggle:hover .toggle-glow {
    opacity: 1;
  }

  .cyber-theme-toggle:hover .toggle-track {
    border-color: rgba(0, 255, 136, 0.6);
    box-shadow: 0 0 20px rgba(0, 255, 136, 0.3);
  }

  .cyber-theme-toggle:hover .toggle-thumb {
    box-shadow: 
      0 4px 12px rgba(0, 0, 0, 0.3),
      0 0 30px rgba(0, 255, 136, 0.6);
  }

  /* Dark mode styles */
  :global(.dark) .toggle-thumb {
    transform: translateY(-50%) translateX(1.25rem);
    background: linear-gradient(135deg, #1e3a8a 0%, #3b82f6 100%);
    box-shadow: 
      0 2px 8px rgba(0, 0, 0, 0.4),
      0 0 20px rgba(59, 130, 246, 0.4);
  }

  :global(.dark) .toggle-track {
    background: linear-gradient(135deg, 
      rgba(59, 130, 246, 0.2) 0%, 
      rgba(139, 92, 246, 0.2) 100%
    );
    border-color: rgba(59, 130, 246, 0.4);
  }

  :global(.dark) .sun-icon {
    opacity: 0;
    transform: scale(0.8);
  }

  :global(.dark) .moon-icon {
    opacity: 1;
    transform: scale(1);
    color: #fff;
  }

  :global(.dark) .cyber-theme-toggle:hover .toggle-track {
    border-color: rgba(59, 130, 246, 0.6);
    box-shadow: 0 0 20px rgba(59, 130, 246, 0.3);
  }

  :global(.dark) .cyber-theme-toggle:hover .toggle-thumb {
    box-shadow: 
      0 4px 12px rgba(0, 0, 0, 0.5),
      0 0 30px rgba(59, 130, 246, 0.6);
  }

  @keyframes track-shimmer {
    0% {
      transform: translateX(-100%);
    }
    50% {
      transform: translateX(100%);
    }
    100% {
      transform: translateX(-100%);
    }
  }
</style>

<script is:inline>
  function initThemeToggle() {
    const theme = (() => {
      if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
        return localStorage.getItem("theme");
      }
      if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
        return "dark";
      }
      return "light";
    })();

    if (theme === "light") {
      document.documentElement.classList.remove("dark");
      document.documentElement.classList.add("light");
    } else {
      document.documentElement.classList.add("dark");
      document.documentElement.classList.remove("light");
    }

    window.localStorage.setItem("theme", theme);

    const handleToggleClick = () => {
      const element = document.documentElement;
      element.classList.toggle("dark");
      element.classList.toggle("light");

      const isDark = element.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    };

    const themeToggle = document.getElementById("themeToggle");
    if (themeToggle) {
      themeToggle.addEventListener("click", handleToggleClick);
    }
  }

  // Initialize immediately and also on DOM ready
  initThemeToggle();
  document.addEventListener("DOMContentLoaded", initThemeToggle);
</script>
