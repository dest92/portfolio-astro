---
import "@fontsource-variable/onest";

import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";

interface Props {
  title: string;
  description: string;
}

const { description, title } = Astro.props;
---

<!doctype html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />

    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>

  <body class="relative text-black dark:text-white overflow-x-hidden">
    <div
      class="fixed
        top-0
        bottom-0
        left-0
        right-0
        z-[-2]
        min-h-screen
        w-full
        bg-gray-50
        dark:bg-gray-950
        cyber-background
        bg-[radial-gradient(ellipse_at_top,rgba(0,255,136,0.1)_0%,rgba(0,255,136,0.05)_25%,transparent_50%),radial-gradient(ellipse_at_bottom,rgba(0,200,255,0.08)_0%,rgba(0,200,255,0.03)_25%,transparent_50%),radial-gradient(circle_at_30%_40%,rgba(255,0,150,0.06)_0%,transparent_50%)]
        dark:bg-[radial-gradient(ellipse_at_top,rgba(0,255,136,0.15)_0%,rgba(0,255,136,0.08)_25%,transparent_50%),radial-gradient(ellipse_at_bottom,rgba(0,200,255,0.12)_0%,rgba(0,200,255,0.05)_25%,transparent_50%),radial-gradient(circle_at_70%_60%,rgba(255,0,150,0.08)_0%,transparent_50%)]
        before:content-['']
        before:absolute
        before:top-0
        before:bottom-0
        before:left-0
        before:right-0
        before:bg-[url('/noise.png')]
        before:opacity-[0.02]
        before:dark:opacity-[0.04]
        after:content-['']
        after:absolute
        after:top-0
        after:bottom-0
        after:left-0
        after:right-0
        after:bg-[linear-gradient(90deg,transparent_0%,rgba(0,255,136,0.03)_50%,transparent_100%)]
        after:animate-pulse"
    >
    </div>

    <Header />
    <slot />
    <Footer />

    <style is:global>
      :root {
        color-scheme: light dark;
        --cyber-primary: #00ff88;
        --cyber-secondary: #00ccff;
        --cyber-accent: #ff0080;
        --cyber-glow: rgba(0, 255, 136, 0.3);
      }

      html {
        font-family: "Onest Variable", system-ui, sans-serif;
        scroll-behavior: smooth;
        overflow-x: hidden;
      }

      body {
        color: rgba(17, 17, 17, 0.9);
        display: flex;
        flex-direction: column;
        min-height: 100vh;
        overscroll-behavior: none;
        overflow-x: hidden;
      }

      @media (prefers-reduced-motion: reduce) {
        html {
          scroll-behavior: auto;
        }
      }

      @media (prefers-color-scheme: dark) {
        body {
          color: rgba(255, 255, 255, 0.9);
        }
      }

      /* Cyber scrollbar */
      ::-webkit-scrollbar {
        width: 8px;
      }

      ::-webkit-scrollbar-track {
        background: rgba(0, 0, 0, 0.1);
      }

      ::-webkit-scrollbar-thumb {
        background: linear-gradient(180deg, var(--cyber-primary), var(--cyber-secondary));
        border-radius: 4px;
        box-shadow: 0 0 10px var(--cyber-glow);
      }

      ::-webkit-scrollbar-thumb:hover {
        background: linear-gradient(180deg, var(--cyber-secondary), var(--cyber-primary));
      }

      #header-nav {
        animation: blur linear both 0.5s;
        animation-timeline: scroll();
        animation-range: 0 500px;
      }

      @keyframes blur {
        to {
          backdrop-filter: blur(20px);
          background: rgba(0, 0, 0, 0.8);
          border-bottom: 1px solid rgba(0, 255, 136, 0.3);
        }
      }

      @media (prefers-color-scheme: dark) {
        @keyframes blur {
          to {
            backdrop-filter: blur(20px);
            background: rgba(0, 0, 0, 0.9);
            border-bottom: 1px solid rgba(0, 255, 136, 0.4);
            box-shadow: 0px 5px 50px -5px rgba(0, 255, 136, 0.2);
          }
        }
      }

      /* Cyber glow utility */
      .cyber-glow {
        box-shadow: 0 0 20px var(--cyber-glow);
      }

      /* Selection colors */
      ::selection {
        background: var(--cyber-primary);
        color: #000;
      }

      ::-moz-selection {
        background: var(--cyber-primary);
        color: #000;
      }
    </style>
  </body>
</html>
